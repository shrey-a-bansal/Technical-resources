/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        int n=0;
        int m=0;
        ListNode* t1= headA;
        ListNode* t2= headB;

        while(t1!=NULL){
            n++;
            t1=t1->next;
        }
        while(t2!=NULL){
            m++;
            t2=t2->next;
        }

        int t=abs(n-m);
        if(n>m){
            while(t){
                headA=headA->next;
                t--;
            }
        }
        else{
            while(t){
                headB=headB->next;
                t--;
            }
        }

        while(headA!=NULL && headB!=NULL){
            if(headA==headB){
                return headA;
            }
            headA=headA->next;
            headB=headB->next;
        }
        return NULL;
    }
};
